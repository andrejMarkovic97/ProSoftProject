/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.view;

import domain.ApartmentFeatures;
import domain.FeatureValue;
import domain.Listing;
import java.util.ArrayList;

/**
 *
 * @author Andrej
 */
public class FrmFeatureValues extends javax.swing.JDialog {

    ApartmentFeatures af;
    FrmApartmentFeatures frmAf;
    Listing listing;
    private FrmDetailsListing frmDetailsListing = null;

    /**
     * Creates new form FrmFeatureValues
     */
    public FrmFeatureValues(ApartmentFeatures af, FrmApartmentFeatures frmAf, Listing listing) {
        this.af = af;
        this.frmAf = frmAf;
        this.listing = listing;
        setLocationRelativeTo(null);
        initComponents();
        lblFeature.setText(af.getFeatureName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFeature = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        txtFeatureValue = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblFeature.setText("jLabel1");

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblFeature)
                        .addGap(18, 18, 18)
                        .addComponent(txtFeatureValue, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFeature)
                    .addComponent(txtFeatureValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnCancel))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed

        if (frmAf != null) {
            FeatureValue fv = new FeatureValue();
            fv.setAppFeatures(af);
            fv.setListing(listing);
            fv.setValue(txtFeatureValue.getText());
            frmAf.addFeatureValue(listing, af, fv);
            frmAf = null;
            listing = null;
            this.dispose();
        }
        if (frmDetailsListing != null) {
//            boolean exist = false;
//            if (af.getFeatureValues() != null) {
//                for (FeatureValue featureValue : af.getFeatureValues()) {
//                    if (featureValue.getAppFeatures().getFeatureID() == af.getFeatureID()
//                            && featureValue.getListing().getListingID() == listing.getListingID()) {
//                        featureValue.setValue(txtFeatureValue.getText());
//                        exist = true;
//                    }
//                }
//                if (exist == false) {
//                    FeatureValue fv = new FeatureValue();
//                    fv.setAppFeatures(af);
//                    fv.setListing(listing);
//                    fv.setValue(txtFeatureValue.getText());
//                    listing.getFeatureValues().add(fv);
//                    af.getFeatureValues().add(fv);
//
//                }
//            } else {
//                af.setFeatureValues(new ArrayList<>());
//                FeatureValue fv = new FeatureValue();
//                fv.setAppFeatures(af);
//                fv.setListing(listing);
//                fv.setValue(txtFeatureValue.getText());
//                listing.getFeatureValues().add(fv);
//                af.getFeatureValues().add(fv);
//            }
//
//            frmDetailsListing.addApartmentFeature(af);
//            setFrmDetailsListing(null);
            FeatureValue newFv =af.getFeatureValues().get(0);
            newFv.setValue(txtFeatureValue.getText());
            for (FeatureValue featureValue : listing.getFeatureValues()) {
                if(featureValue.getAppFeatures().getFeatureID()==newFv.getAppFeatures().getFeatureID()
                        && featureValue.getListing().getListingID()==newFv.getListing().getListingID()){
                    featureValue=newFv;
                }
            }
            frmDetailsListing.setNewFeatureValue(newFv);
            frmDetailsListing.setListing(listing);
            this.dispose();
            frmDetailsListing = null;
            this.listing = null;

        }
    }//GEN-LAST:event_btnSubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel lblFeature;
    private javax.swing.JTextField txtFeatureValue;
    // End of variables declaration//GEN-END:variables

    public void setFrmDetailsListing(FrmDetailsListing frmDetailsListing) {
        this.frmDetailsListing = frmDetailsListing;
    }
}
